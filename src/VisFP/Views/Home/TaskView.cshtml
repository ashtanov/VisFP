@model VisFP.Models.RGViewModels.TaskViewModel

@{
    ViewData["Title"] = Model.TaskTitle;
}
<div>
    <h4>@Model.TaskTitle</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            <span>Алфавит</span>
        </dt>
        <dd>
            Терминалы: @Html.Raw(string.Join(", ", Model.Grammar.Alph.Terminals.Select(x => $"<b>{x}</b>")))
        </dd>
        <dd>
            Нетерминалы: @Html.Raw(string.Join(", ", Model.Grammar.Alph.NonTerminals.Select(x => $"<b>{x}</b>")))
        </dd>
        <dd>
            Начальное состояние: <b>@Model.Grammar.Alph.InitState</b>
        </dd>
    </dl>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.TaskText)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.TaskText)
        </dd>
    </dl>
</div>
<div>
    @{await Html.RenderPartialAsync("GraphView", Model);}
</div>
@{ await Html.RenderPartialAsync("AcceptAnswerView", new AnswerViewModel { TaskId = Model.Id }); }
@*<form method="post" action="/Answer">
    <input name="taskId" type="hidden" value="@Model.Id" />
    <dl class="dl-horizontal">
        <dt>
            <span>Ответ</span>
        </dt>
        <dd>
            <input name="answer" type="text" />
            <input type="submit" value="Проверить" />
        </dd>
    </dl>
</form>*@

<a asp-action="Index">Back to List</a>
